// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/light.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GpioDevicesService {

  /// <summary>Holder for reflection information generated from Protos/light.proto</summary>
  public static partial class LightReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/light.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LightReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3MvbGlnaHQucHJvdG8SBWdyZWV0Ghtnb29nbGUvcHJvdG9idWYv",
            "ZW1wdHkucHJvdG8iLgoKTGlnaHRSZXBseRISCgpicmlnaHRuZXNzGAEgASgF",
            "EgwKBG1vZGUYAiABKAkypwIKBUxpZ2h0EjYKCUdldFN0YXR1cxIWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eRoRLmdyZWV0LkxpZ2h0UmVwbHkSOAoLVHVybk9u",
            "TGlnaHQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaES5ncmVldC5MaWdodFJl",
            "cGx5EjkKDFR1cm5PZmZMaWdodBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoR",
            "LmdyZWV0LkxpZ2h0UmVwbHkSNQoIRGltTGlnaHQSFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaES5ncmVldC5MaWdodFJlcGx5EjoKDUJyaWdodGVuTGlnaHQS",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkaES5ncmVldC5MaWdodFJlcGx5QhWq",
            "AhJHcGlvRGV2aWNlc1NlcnZpY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GpioDevicesService.LightReply), global::GpioDevicesService.LightReply.Parser, new[]{ "Brightness", "Mode" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The response message containing the brightness.
  /// </summary>
  public sealed partial class LightReply : pb::IMessage<LightReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LightReply> _parser = new pb::MessageParser<LightReply>(() => new LightReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LightReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GpioDevicesService.LightReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LightReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LightReply(LightReply other) : this() {
      brightness_ = other.brightness_;
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LightReply Clone() {
      return new LightReply(this);
    }

    /// <summary>Field number for the "brightness" field.</summary>
    public const int BrightnessFieldNumber = 1;
    private int brightness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Brightness {
      get { return brightness_; }
      set {
        brightness_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private string mode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LightReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LightReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Brightness != other.Brightness) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Brightness != 0) hash ^= Brightness.GetHashCode();
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Brightness != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Brightness);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Brightness != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Brightness);
      }
      if (Mode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Brightness != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Brightness);
      }
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LightReply other) {
      if (other == null) {
        return;
      }
      if (other.Brightness != 0) {
        Brightness = other.Brightness;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Brightness = input.ReadInt32();
            break;
          }
          case 18: {
            Mode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Brightness = input.ReadInt32();
            break;
          }
          case 18: {
            Mode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
